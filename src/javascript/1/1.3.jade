extends ../../shade/layout
block content

  .container#container(ref='container')

    script.
      ;(function(){
        /*
          在许多语言的对象系统中，封装数据是由语法解析来实现的，这些语言也许提供了 private 、
          public 、 protected 等关键字来提供不同的访问权限。
          但 JavaScript并没有提供对这些关键字的支持，我们只能依赖变量的作用域来实现封装特性，
          而且只能模拟出 public 和 private 这两种封装性。
          除了 ECMAScript 6中提供的 let 之外，一般我们通过函数来创建作用域
        */
        var myObject =(function(){
          var __name = 'sven'; // 私有（private）变量
          return {
            getName: function(){
              return __name; // 公开（public）方法
            }
          }
        })();

        console.log(myObject.getName()); // 输出：sven
        console.log(myObject.__name); // 输出：undefined

        /*
          另外值得一提的是，在 ECAMScript 6中，还可以通过 Symbol创建私有属性。
          详情可参阅 https://github.com/lukehoban/es6features，二维码见右边。
        */
        
      })();